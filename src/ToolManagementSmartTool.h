//ToolManagementSmartTool.h
//Generated by MakeOID20131018.1 
//Preserve any customized code if required.
#ifndef ToolManagementSmartTool_H
#define ToolManagementSmartTool_H
//Includes needed for common SmartTool Type
#include "SmartTool.h"

//MakeOID-Section:: ToolManagementOID Enum
enum ToolManagementOID
{
		TOOLMANAGEMENT_OID_TOOL_MGMT = 400,
		TOOLMANAGEMENT_OID_TOOL_REC = 401,

		TOOLMANAGEMENT_OID_MAX_NUMBER = 402

};

//MakeOID-Section::END

//MakeOID-Section:: ToolManagement Value Defines
// TOOL_SYSTEM_OPERATIONS value association
enum TOOL_SYSTEM_OPERATIONS //byte
{
	operation_null = 0,
	register_tool_server = 1,
	register_tool_client = 2,
	search = 3,
	search_result = 4,
	search_result_rec = 5,
	search_failure = 6,
	update = 7,
	update_failure = 8,
	load_request = 9,
	load_success = 10,
	load_failure = 11,
	load = 12,
	unload = 13,
	improper_type = 14,
	error_report = 15,
	operation_num_values = 16,
};

// TOOL_SYSTEM_SEARCH_CODES value association
enum TOOL_SYSTEM_SEARCH_CODES //byte
{
	search_not_set = 0,
	required_tool_type = 1,
	tool_type = 2,
	tool_id = 3,
	complete = 4,
	list_tool_types = 5,
	search_num_values = 6,
};

// TOOL_SYSTEM_RESULT_CODES value association
enum TOOL_SYSTEM_RESULT_CODES //byte
{
	result_not_set = 0,
	no_tool_server = 1,
	tool_server_error = 2,
	tool_not_found = 3,
	bad_arg_1 = 4,
	bad_arg_2 = 5,
	bad_arg_3 = 6,
	result_num_values = 7,
};

// TOOL_STATUS value association
enum TOOL_STATUS //byte
{
	TSTAT_NOT_SET = 0,
	TSTAT_ACTIVE = 1,
	TSTAT_END_OF_LIFE = 2,
	TSTAT_BROKEN = 3,
	TSTAT_MISSING = 4,
	TSTAT_NEEDS_INSPECTION = 5,
	TSTAT_LOCAL = 6,
	TSTAT_NUM_VALUES = 7,
};


//MakeOID-Section::END




//MakeOID-Section:: TYPEDEFS (oid complete)

typedef struct
{
	char coperation;
	char carg1;
	unsigned int uiarg2;
	//char * szsarg3; //not stored in struct
} td_oid_tool_mgmt;

typedef struct
{
	char cOperation;
	char cToolStatus;
	char cHardstop;
	float fDiameter;
	float fLength;
	float fMinBreak;
	float fLengthCountersink;
	float fCountersinkAdjust;
	unsigned long ulDTimeTicksMSW;
	unsigned long ulDTimeTicksLSW;
	unsigned int uiDCount;
	unsigned int uiDWarnCount;
	unsigned int uiDLimitCount;
	//char * szID; //not stored in struct
	//char * szToolTypeCode; //not stored in struct
} td_oid_tool_rec;

//MakeOID-Section::END


//MakeOID-Section:: Global Smart Tool ID And Version Constant Defines 
//FIXME PORTMED2  MEDLOW really... not all of these apply to a module, and the entire concept could be updated...
extern const char * SmartToolTypeToolManagement;

extern const char * ToolManagementSysVersion;

extern const uint16 ToolManagementCOMVersion;

extern char * pszOIDNamesToolManagement[];

extern td_SmartTool g_ToolManagementSmartTool;




//MakeOID-Section:: CONFIG TYPEDEF AND PREDECLARATION

typedef struct
{
} td_ToolManagementConfigData;

extern td_ToolManagementConfigData g_ToolManagementConfigData;

//MakeOID-Section::END




//MakeOID-Section:: GLOBAL PREDECLARATIONS (for header)

//MakeOID-Section::END


//MakeOID-Section:: FUNCTION PREDECLARATIONS

void ToolManagementInitConfig(void);

//MakeOID-Section::END

#endif
